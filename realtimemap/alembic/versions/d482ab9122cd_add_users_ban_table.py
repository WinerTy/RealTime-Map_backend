"""add users ban table

Revision ID: d482ab9122cd
Revises: 52d6bcf5ff56
Create Date: 2025-09-04 09:11:47.560997

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d482ab9122cd"
down_revision: Union[str, None] = "52d6bcf5ff56"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_bans",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("moderator_id", sa.Integer(), nullable=False),
        sa.Column(
            "reason",
            sa.Enum("abuse", "spam", "other", name="ban_reason"),
            server_default="abuse",
            nullable=False,
        ),
        sa.Column("reason_text", sa.String(length=128), nullable=True),
        sa.Column(
            "banned_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("banned_until", sa.DateTime(), nullable=True),
        sa.Column("is_permanent", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["moderator_id"],
            ["users.id"],
            name=op.f("fk_users_bans_moderator_id_users"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_users_bans_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users_bans")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users_bans")
    # ### end Alembic commands ###
