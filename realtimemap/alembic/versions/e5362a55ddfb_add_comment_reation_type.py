"""add comment reation type

Revision ID: e5362a55ddfb
Revises: b8a03d306d30
Create Date: 2025-09-10 13:36:10.096547

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e5362a55ddfb"
down_revision: Union[str, None] = "b8a03d306d30"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# 1. Определяем наш новый тип ENUM как переменную
# Это позволяет нам ссылаться на него и в upgrade, и в downgrade
comment_reaction_enum = sa.Enum("like", "dislike", name="comment_reaction_type")


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # 2. ШАГ 1: Сначала создаем сам тип ENUM в базе данных
    comment_reaction_enum.create(op.get_bind(), checkfirst=False)

    # 3. ШАГ 2: Теперь добавляем колонку, используя уже созданный тип
    op.add_column(
        "comment_reactions",
        sa.Column(
            "reaction_type",
            comment_reaction_enum,  # Используем нашу переменную
            server_default="like",
            nullable=False,
        ),
    )

    # Ваша старая команда остается на месте
    op.drop_column("comment_reactions", "is_like")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Выполняем действия в ОБРАТНОМ порядке

    # Ваша старая команда остается на месте
    op.add_column(
        "comment_reactions",
        sa.Column("is_like", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )

    # 4. ШАГ 1 (для downgrade): Удаляем колонку, которая использует тип
    op.drop_column("comment_reactions", "reaction_type")

    # 5. ШАГ 2 (для downgrade): Теперь, когда тип не используется, удаляем его
    comment_reaction_enum.drop(op.get_bind(), checkfirst=False)

    # ### end Alembic commands ###
